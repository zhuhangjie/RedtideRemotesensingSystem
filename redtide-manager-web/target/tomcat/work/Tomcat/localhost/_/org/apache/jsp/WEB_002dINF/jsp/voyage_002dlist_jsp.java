/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2018-03-28 08:04:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.WEB_002dINF.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class voyage_002dlist_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("<table class=\"easyui-datagrid\" id=\"voyageList\" title=\"航次列表\" \r\n");
      out.write("       data-options=\"singleSelect:false,collapsible:true,pagination:true,url:'");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/voyage/list',method:'get',pageSize:30,toolbar:toolbar\">\r\n");
      out.write("    <thead>\r\n");
      out.write("        <tr>\r\n");
      out.write("        \t<th data-options=\"field:'ck',checkbox:true\"></th>\r\n");
      out.write("        \t<th data-options=\"field:'id',width:60\">航次ID</th> \r\n");
      out.write("            <th data-options=\"field:'voyageName',width:200\">航次名称</th>\r\n");
      out.write("            <th data-options=\"field:'leader',width:100\">航次负责人</th>\r\n");
      out.write("            <th data-options=\"field:'shipCode',width:100\">船号</th>\r\n");
      out.write("            <th data-options=\"field:'position',width:100\">航次位置</th>\r\n");
      out.write("            <th data-options=\"field:'mission',width:450\">航次任务</th>\r\n");
      out.write("            <th data-options=\"field:'startTime',width:130,align:'center',formatter:formatDatebox\">开始日期</th>\r\n");
      out.write("            <th data-options=\"field:'endTime',width:130,align:'center',formatter:formatDatebox\">结束日期</th>\r\n");
      out.write("            \r\n");
      out.write("        </tr>\r\n");
      out.write("    </thead>\r\n");
      out.write("</table>\r\n");
      out.write("\r\n");
      out.write("<div id=\"voyageEditWindow\" class=\"easyui-window\" title=\"编辑航次\" data-options=\"modal:true,closed:true,iconCls:'icon-save',href:'voyage-edit'\" style=\"width:80%;height:80%;padding:10px;\">\r\n");
      out.write("</div>\r\n");
      out.write("<script>\r\n");
      out.write("\t /* $(function(){\r\n");
      out.write("\t\t$(\"#voyageList\").datagrid('hideColumn', \"id\");\r\n");
      out.write("\t});  */\r\n");
      out.write("    function getVoyageSelectionsIds(){\r\n");
      out.write("    \tvar voyageList = $(\"#voyageList\");\r\n");
      out.write("    \tvar sels = voyageList.datagrid(\"getSelections\");\r\n");
      out.write("    \tvar ids = [];\r\n");
      out.write("    \tfor(var i in sels){\r\n");
      out.write("    \t\tids.push(sels[i].id);\r\n");
      out.write("    \t}\r\n");
      out.write("    \tids = ids.join(\",\");\r\n");
      out.write("    \treturn ids;\r\n");
      out.write("    }\r\n");
      out.write("    \r\n");
      out.write("    var toolbar = [{\r\n");
      out.write("        text:'新增',\r\n");
      out.write("        iconCls:'icon-add',\r\n");
      out.write("        handler:function(){\r\n");
      out.write("        \t$(\".tree-title:contains('新增航次')\").parent().click();\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text:'编辑',\r\n");
      out.write("        iconCls:'icon-edit',\r\n");
      out.write("        handler:function(){\r\n");
      out.write("        \tvar ids = getVoyageSelectionsIds();\r\n");
      out.write("        \tif(ids.length == 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','必须选择一个航次才能编辑!');\r\n");
      out.write("        \t\treturn ;\r\n");
      out.write("        \t}\r\n");
      out.write("        \tif(ids.indexOf(',') > 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','只能选择一个航次!');\r\n");
      out.write("        \t\treturn ;\r\n");
      out.write("        \t}\r\n");
      out.write("        \t\r\n");
      out.write("        \t$(\"#voyageEditWindow\").window({\r\n");
      out.write("        \t\tonLoad :function(){\r\n");
      out.write("        \t\t\t//回显数据\r\n");
      out.write("        \t\t\tvar data = $(\"#voyageList\").datagrid(\"getSelections\")[0];\r\n");
      out.write("        \t\t\t/* str = JSON.stringify(data); */\r\n");
      out.write("        \t\t\t\r\n");
      out.write("        \t\t\t//日期由于格式原因无法回显\r\n");
      out.write("        \t\t\t/* $(\"#voyageEditForm\").form(\"load\",{\"startTime\":data.startTime}); \r\n");
      out.write("        \t\t\t$(\"#voyageEditForm\").form(\"load\",{\"endTime\":data.endTime});  */\r\n");
      out.write("        \t\t\t\r\n");
      out.write("        \t\t\t//由于form的load方法直接把全部的data添加时会无法回显，所以这里要分开添加\r\n");
      out.write("        \t\t\t$(\"#voyageEditForm\").form(\"load\",{\"id\":data.id}); \r\n");
      out.write("        \t\t\t$(\"#voyageEditForm\").form(\"load\",{\"voyageName\":data.voyageName}); \r\n");
      out.write("        \t\t\t$(\"#voyageEditForm\").form(\"load\",{\"leader\":data.leader}); \r\n");
      out.write("        \t\t\t$(\"#voyageEditForm\").form(\"load\",{\"position\":data.position}); \r\n");
      out.write("        \t\t\t$(\"#voyageEditForm\").form(\"load\",{\"shipCode\":data.shipCode}); \r\n");
      out.write("        \t\t\t$(\"#voyageEditForm\").form(\"load\",{\"mission\":data.mission}); \r\n");
      out.write("        \t\t\t/* E3.init({\r\n");
      out.write("        \t\t\t\tfun:function(node){\r\n");
      out.write("        \t\t\t\t\tE3.changeItemParam(node, \"voyageEditForm\");\r\n");
      out.write("        \t\t\t\t}\r\n");
      out.write("        \t\t\t});  */\r\n");
      out.write("        \t\t}\r\n");
      out.write("        \t}).window(\"open\");\r\n");
      out.write("        }\r\n");
      out.write("    },{\r\n");
      out.write("        text:'删除',\r\n");
      out.write("        iconCls:'icon-cancel',\r\n");
      out.write("        handler:function(){\r\n");
      out.write("        \tvar ids = getVoyageSelectionsIds();\r\n");
      out.write("        \tif(ids.length == 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','未选中航次!');\r\n");
      out.write("        \t\treturn ;\r\n");
      out.write("        \t}\r\n");
      out.write("        \t$.messager.confirm('确认','确定删除ID为 '+ids+' 的航次吗？',function(r){\r\n");
      out.write("        \t    if (r){\r\n");
      out.write("        \t    \tvar params = {\"ids\":ids};\r\n");
      out.write("                \t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/voyage/delete\",params, function(data){\r\n");
      out.write("            \t\t\tif(data.status == 200){\r\n");
      out.write("            \t\t\t\t$.messager.alert('提示','删除航次成功!',undefined,function(){\r\n");
      out.write("            \t\t\t\t\t//刷新航次列表\r\n");
      out.write("            \t\t\t\t\t$(\"#voyageList\").datagrid(\"reload\");\r\n");
      out.write("            \t\t\t\t\t//刷新我的航次列表\r\n");
      out.write("            \t\t\t\t\t$(\"#voyageUserList\").datagrid(\"reload\");\r\n");
      out.write("            \t\t\t\t\t//初始化选择航次combobox\r\n");
      out.write("            \t\t\t\t\tVoyageSelectInit();\r\n");
      out.write("            \t\t\t\t});\r\n");
      out.write("            \t\t\t}\r\n");
      out.write("            \t\t});\r\n");
      out.write("        \t    }\r\n");
      out.write("        \t});\r\n");
      out.write("        }\r\n");
      out.write("    },\r\n");
      out.write("    {\r\n");
      out.write("        text:'关联',\r\n");
      out.write("        iconCls:'icon-ok',\r\n");
      out.write("        handler:function(){\r\n");
      out.write("        \tvar ids = getVoyageSelectionsIds();\r\n");
      out.write("        \tif(ids.length == 0){\r\n");
      out.write("        \t\t$.messager.alert('提示','未选中航次!');\r\n");
      out.write("        \t\treturn ;\r\n");
      out.write("        \t}\r\n");
      out.write("        \t$.messager.confirm('确认','确定本用户关联ID为 '+ids+' 的航次吗？',function(r){\r\n");
      out.write("        \t    if (r){\r\n");
      out.write("        \t    \tvar params = {\"ids\":ids};\r\n");
      out.write("                \t$.post(\"");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${pageContext.request.contextPath}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("/voyage/relate/");
      out.write((java.lang.String) org.apache.jasper.runtime.PageContextImpl.proprietaryEvaluate("${user.id}", java.lang.String.class, (javax.servlet.jsp.PageContext)_jspx_page_context, null, false));
      out.write("\",params, function(data){\r\n");
      out.write("            \t\t\tif(data.status == 200){\r\n");
      out.write("            \t\t\t\t$.messager.alert('提示','关联航次成功!',undefined,function(){\r\n");
      out.write("            \t\t\t\t\t//打开我的航次\r\n");
      out.write("            \t\t\t\t\t$(\".tree-title:contains('我的航次')\").parent().click();\r\n");
      out.write("            \t\t\t\t\t//刷新我的航次列表\r\n");
      out.write("            \t\t\t\t\t$(\"#voyageUserList\").datagrid(\"reload\");\r\n");
      out.write("            \t\t\t\t});\r\n");
      out.write("            \t\t\t}else if (data.status == 401){\r\n");
      out.write("            \t\t\t\t$.messager.alert('提示','关联航次重复，关联失败!');\r\n");
      out.write("            \t\t\t} else{\r\n");
      out.write("            \t\t\t\t$.messager.alert('提示','关联错误!');\r\n");
      out.write("            \t\t\t}\r\n");
      out.write("            \t\t});\r\n");
      out.write("        \t    }\r\n");
      out.write("        \t});\r\n");
      out.write("        }\r\n");
      out.write("    }\r\n");
      out.write("    ];\r\n");
      out.write("    \r\n");
      out.write("    //日期转换\r\n");
      out.write("    function formatDatebox(value) {  \r\n");
      out.write("        if (value == null || value == '') {  \r\n");
      out.write("            return '';  \r\n");
      out.write("        }  \r\n");
      out.write("        var dt;  \r\n");
      out.write("        if (value instanceof Date) {  \r\n");
      out.write("            dt = value;  \r\n");
      out.write("        } else {  \r\n");
      out.write("            dt = new Date(value);  \r\n");
      out.write("        }  \r\n");
      out.write("      \r\n");
      out.write("        return dt.format(\"yyyy-MM-dd\"); //扩展的Date的format方法(上述插件实现)  \r\n");
      out.write("    } \r\n");
      out.write("</script>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
